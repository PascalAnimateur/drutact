<?php
/**
 * @file
 * Code for the DruTACT Webform feature.
 */

include_once 'drutact_webform.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Set a maximum width for the existing component select box.
 */
function drutact_webform_form_webform_components_form_alter(&$form, $form_state, $form_id) {
  // Set a maximum width for the existing component select box.
  $form['#attached']['css'] = array(
    array(
      'data' => '.form-item-existing-type { max-width: 500px; }',
      'type' => 'inline',
    ),
  );
}

/**
 * Implements hook_menu_local_tasks_alter().
 *
 * Default action links (Add Webform).
 */
function drutact_webform_menu_local_tasks_alter(&$data, $router_item, $root_path) {
  switch ($root_path) {
    case 'admin/content/webform':
      // 'Add Webform' action link.
      $item = menu_get_item('node/add/webform');
      $item['title'] = t('Add Webform');
      $data['actions']['output'][] = array(
        '#theme' => 'menu_local_action',
        '#link' => $item,
      );
      break;
  }
}

/**
 * Implements hook_post_features_rebuild().
 *
 * Default content type permissions (webform).
 * Revert feature components (drutact_webform).
 */
function drutact_webform_post_features_rebuild($component) {
  if ($component == 'ctools') {
    // Default content type permissions (webform).
    _drutact_default_content_type_permissions('webform');
  }

  if ($component == 'node') {
    // Revert feature components (drutact_webform).
    $feature = features_get_features('drutact_webform');
    $components = array_keys($feature->info['features']);
    features_revert(array('drutact_webform' => $components));
  }
}
